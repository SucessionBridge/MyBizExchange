import React, { useState } from 'react';
import jsPDF from 'jspdf';

export default function BusinessValuation() {
  const [formData, setFormData] = useState({
    businessName: '',
    yearsInBusiness: '',
    email: '',
    industry: '',
    otherIndustry: '',
    annualRevenue: '',
    annualExpenses: '',
    totalSalariesPaid: '',
    ownerSalaryAddBack: '',
    personalAddBacks: '',
    hasEmployees: 'yes',
    equipment: [{ name: '', value: '' }],
    realEstateIncluded: 'no',
    realEstateValue: '',
    returnCustomers: '',
    hasContracts: 'no',
    contractsValue: '',
    sellerFinancing: 'maybe',
  });

  const industries = [
    'Landscaping', 'Construction', 'Cleaning', 'Retail', 'E-commerce', 'Consulting',
    'Accounting', 'Legal', 'Restaurant', 'Health & Wellness', 'Transportation',
    'Technology', 'Education', 'Manufacturing', 'Automotive', 'Real Estate',
    'Hospitality', 'Home Services', 'Fitness', 'Event Planning', 'Photography', 'Other'
  ];

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  const handleEquipmentChange = (index, field, value) => {
    const updated = [...formData.equipment];
    updated[index][field] = value;
    setFormData((prev) => ({ ...prev, equipment: updated }));
  };

  const addEquipment = () => {
    setFormData((prev) => ({
      ...prev,
      equipment: [...prev.equipment, { name: '', value: '' }],
    }));
  };

  const calculateValuation = () => {
    const revenue = parseFloat(formData.annualRevenue) || 0;
    const expenses = parseFloat(formData.annualExpenses) || 0;
    const ownerSalaryAddBack = parseFloat(formData.ownerSalaryAddBack) || 0;
    const addBacks = parseFloat(formData.personalAddBacks) || 0;
    const realEstate = formData.realEstateIncluded === 'yes' ? parseFloat(formData.realEstateValue) || 0 : 0;

    const equipmentValue = formData.equipment.reduce((sum, eq) => {
      return sum + (parseFloat(eq.value) || 0);
    }, 0);

    const sde = revenue - expenses + ownerSalaryAddBack + addBacks;

    const multiplier = equipmentValue > 0
      ? (formData.hasEmployees === 'yes' ? 2.5 : 2.0)
      : (formData.hasEmployees === 'yes' ? 2.2 : 1.8);

    const sdeValue = sde * multiplier;
    return { businessValue: sdeValue, realEstateValue: realEstate, total: sdeValue + realEstate };
  };

  const generatePDF = () => {
    const { businessValue, realEstateValue, total } = calculateValuation();

    const doc = new jsPDF();
    doc.setFont('helvetica', 'bold');
    doc.setFontSize(18);
    doc.text('SuccessionBridge Business Valuation', 20, 20);

    doc.setFont('helvetica', 'normal');
    doc.setFontSize(10);
    doc.text(
      'Disclaimer: This valuation is a simple tool to help business owners get a general sense of what their business may be worth. It should not be used for investment, loan, or legal decisions.',
      20,
      30,
      { maxWidth: 170 }
    );

    let y = 50;
    const addLine = (label, value) => {
      doc.setFont('helvetica', 'bold');
      doc.text(`${label}:`, 20, y);
      doc.setFont('helvetica', 'normal');
      doc.text(`${value}`, 90, y);
      y += 10;
    };

    addLine('Business Name', formData.businessName);
    addLine('Years in Business', formData.yearsInBusiness);
    addLine('Email', formData.email);
    addLine('Industry', formData.industry === 'Other' ? formData.otherIndustry : formData.industry);
    addLine('Annual Revenue', `$${formData.annualRevenue}`);
    addLine('Annual Expenses', `$${formData.annualExpenses}`);
    addLine('Total Salaries Paid', `$${formData.totalSalariesPaid}`);
    addLine("Owner's Salary Add-Back", `$${formData.ownerSalaryAddBack}`);
    addLine('Personal Add-Backs', `$${formData.personalAddBacks}`);
    addLine('Employees', formData.hasEmployees);

    doc.setFont('helvetica', 'bold');
    doc.text('Equipment:', 20, y);
    y += 10;
    doc.setFont('helvetica', 'normal');
    formData.equipment.forEach(eq => {
      doc.text(`- ${eq.name || 'N/A'}: $${eq.value || 0}`, 30, y);
      y += 10;
    });

    if (formData.realEstateIncluded === 'yes') {
      addLine('Real Estate Value', `$${formData.realEstateValue}`);
    }

    addLine('Estimated Business Value', `$${businessValue.toFixed(2)}`);
    if (realEstateValue > 0) {
      addLine('Estimated Total (Business + Real Estate)', `$${total.toFixed(2)}`);
    }

    y += 10;
    doc.setFont('helvetica', 'bold');
    doc.text('Seller Financing Advantage:', 20, y);
    y += 10;
    doc.setFont('helvetica', 'normal');
    doc.text(
      'Offering seller financing under your own terms can increase your total payout. For example, financing part of the sale over several years with interest can add significant income and attract more buyers.',
      20,
      y,
      { maxWidth: 170 }
    );

    y += 40;
    doc.setFontSize(9);
    doc.setFont('helvetica', 'italic');
    doc.text('Generated by SuccessionBridge Valuation Wizard', 20, y);

    doc.save('valuation-report.pdf');
  };

  const { businessValue, realEstateValue, total } = calculateValuation();

  return (
    <main className="min-h-screen p-6 bg-gray-50">
      <div className="max-w-3xl mx-auto bg-white shadow-md p-6 rounded-lg">
        <h1 className="text-3xl font-bold mb-2">Valuation Wizard</h1>
        <p className="text-sm text-gray-600 mb-6">
          Disclaimer: This valuation is a simple tool to help business owners get a general sense of what their business may be worth. 
          It should not be used for investment, loan, or legal decisions.
        </p>

        <div className="space-y-4">
          <input name="businessName" placeholder="Business Name" value={formData.businessName} onChange={handleChange} className="w-full border p-3 rounded" />
          <input name="yearsInBusiness" placeholder="Years in Business" value={formData.yearsInBusiness} onChange={handleChange} className="w-full border p-3 rounded" />
          <input name="email" type="email" placeholder="Email Address (for report delivery)" value={formData.email} onChange={handleChange} className="w-full border p-3 rounded" required />

          <select name="industry" value={formData.industry} onChange={handleChange} className="w-full border p-3 rounded">
            <option value="">Select Industry</option>
            {industries.map((ind) => (
              <option key={ind} value={ind}>{ind}</option>
            ))}
          </select>

          {formData.industry === 'Other' && (
            <input name="otherIndustry" placeholder="Enter Industry" value={formData.otherIndustry} onChange={handleChange} className="w-full border p-3 rounded" />
          )}

          <input name="annualRevenue" placeholder="Annual Revenue ($)" value={formData.annualRevenue} onChange={handleChange} className="w-full border p-3 rounded" />
          <input name="annualExpenses" placeholder="Annual Expenses ($)" value={formData.annualExpenses} onChange={handleChange} className="w-full border p-3 rounded" />
          <input name="totalSalariesPaid" placeholder="Total Salaries Paid ($)" value={formData.totalSalariesPaid} onChange={handleChange} className="w-full border p-3 rounded" />
          <input name="ownerSalaryAddBack" placeholder="Owner's Salary Add-Back ($)" value={formData.ownerSalaryAddBack} onChange={handleChange} className="w-full border p-3 rounded" />
          <input name="personalAddBacks" placeholder="Personal Add-Backs ($)" value={formData.personalAddBacks} onChange={handleChange} className="w-full border p-3 rounded" />

          <label className="block font-medium">Does your business have employees?</label>
          <select name="hasEmployees" value={formData.hasEmployees} onChange={handleChange} className="w-full border p-3 rounded">
            <option value="yes">Yes</option>
            <option value="no">No, I operate it alone</option>
          </select>

          <label className="block font-medium">List Non-Essential Equipment</label>
          {formData.equipment.map((eq, idx) => (
            <div key={idx} className="flex space-x-2 mb-2">
              <input
                placeholder="Equipment Name"
                value={eq.name}
                onChange={(e) => handleEquipmentChange(idx, 'name', e.target.value)}
                className="flex-1 border p-2 rounded"
              />
              <input
                placeholder="Value ($)"
                value={eq.value}
                onChange={(e) => handleEquipmentChange(idx, 'value', e.target.value)}
                className="w-32 border p-2 rounded"
              />
            </div>
          ))}
          <button onClick={addEquipment} className="text-blue-600 hover:underline">+ Add Equipment</button>

          <label className="block font-medium">Include Real Estate in Valuation?</label>
          <select name="realEstateIncluded" value={formData.realEstateIncluded} onChange={handleChange} className="w-full border p-3 rounded">
            <option value="no">No</option>
            <option value="yes">Yes</option>
          </select>
          {formData.realEstateIncluded === 'yes' && (
            <input name="realEstateValue" placeholder="Real Estate Value ($)" value={formData.realEstateValue} onChange={handleChange} className="w-full border p-3 rounded" />
          )}

          <label className="block font-medium">Would you consider seller financing as part of your exit?</label>
          <select name="sellerFinancing" value={formData.sellerFinancing} onChange={handleChange} className="w-full border p-3 rounded">
            <option value="yes">Yes</option>
            <option value="maybe">Maybe</option>
            <option value="no">No</option>
          </select>

          <div className="mt-6">
            <p className="text-xl font-semibold mb-2">Estimated Business Value: ${businessValue.toFixed(2)}</p>
            {realEstateValue > 0 && (
              <p className="text-lg text-gray-700 mb-2">+ Real Estate: ${realEstateValue.toFixed(2)}</p>
            )}
            <p className="text-xl font-bold mb-4">Total Estimated Value: ${total.toFixed(2)}</p>

            <p className="text-sm text-gray-600 mb-4">
              💡 The price you choose to sell your business is ultimately your decision. Considering seller financing under your terms can increase your total payout and attract more buyers.
            </p>

            <button onClick={generatePDF} className="bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700">
              Download PDF Report
            </button>
          </div>
        </div>
      </div>
    </main>
  );
}
